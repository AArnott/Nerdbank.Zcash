parameters:
- name: windowsPool
  type: object
  default:
    vmImage: windows-2022
- name: RunTests
  type: boolean
  default: true

jobs:
- job: Windows
  pool: ${{ parameters.windowsPool }}
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true

  - template: install-dependencies.yml

  - script: dotnet nbgv cloud -c
    displayName: âš™ Set build number

  - template: cargo.yml
    parameters:
      test_target: x86_64-pc-windows-msvc

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: Linux
  pool:
    vmImage: Ubuntu 20.04
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true

  - template: install-dependencies.yml

  - template: cargo.yml
    parameters:
      test_target: x86_64-unknown-linux-gnu
      checks: true

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}
  - script: dotnet format --verify-no-changes --no-restore
    displayName: ðŸ’… Verify formatted code
    enabled: false # TODO: enable this once we've solved the issue with uniffi C# emitted code formatting

- job: android
  pool:
    vmImage: Ubuntu 20.04
  steps:
  - checkout: self
    fetchDepth: 1
    clean: true
    submodules: true

  - template: cross.yml

- job: macOS
  pool:
    vmImage: macOS-12
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true

  - template: install-dependencies.yml

  - template: cargo.yml
    parameters:
      test_target: x86_64-apple-darwin

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: Pack
  dependsOn:
  - Windows
  - Linux
  - macOS
  - android
  pool:
    vmImage: Ubuntu 20.04
  variables:
  - ${{ if eq(variables['System.TeamFoundationCollectionUri'], 'https://dev.azure.com/andrewarnott/') }}:
    - group: dotnetfoundation code signing
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true
  - template: install-dependencies.yml
  - template: pack.yml

- job: WrapUp
  dependsOn:
  - Windows
  - Linux
  - macOS
  pool: ${{ parameters.windowsPool }} # Use Windows agent because PublishSymbols task requires it (https://github.com/microsoft/azure-pipelines-tasks/issues/13821).
  condition: succeededOrFailed()
  steps:
  - checkout: self
    fetchDepth: 1
    clean: true
    submodules: false
  - template: install-dependencies.yml
    parameters:
      initArgs: -NoRestore
  - template: publish-symbols.yml
  - ${{ if parameters.RunTests }}:
    - template: publish-codecoverage.yml
