parameters:
- name: windowsPool
  type: object
  default:
    vmImage: windows-2022
- name: RunTests
  type: boolean
  default: true
- name: BaseChannelName
  type: string
  default: ''
- name: desktopAppAgents
  type: object
  default:
  - Windows_velopack
  - Linux
  - macOS_velopack
- name: publishPlatforms
  type: object
  default:
  - x64
  - ARM64

jobs:
- job: Windows
  pool: ${{ parameters.windowsPool }}
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true

  - template: install-dependencies.yml

  - script: dotnet nbgv cloud -c
    displayName: ‚öô Set build number

  - template: cargo.yml
    parameters:
      test_target: x86_64-pc-windows-msvc
      RunTests: ${{ parameters.RunTests }}

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}
      osRID: win
      publishPlatforms: ${{ parameters.publishPlatforms }}

- job: Windows_velopack
  displayName: Windows velopack
  dependsOn: Windows
  pool: ${{ parameters.windowsPool }}
  steps:
  - template: velopack.yml
    parameters:
      osRID: win
      BaseChannelName: ${{ parameters.BaseChannelName }}
      publishPlatforms: ${{ parameters.publishPlatforms }}
      BuildJobName: Windows

- job: Linux
  pool:
    vmImage: Ubuntu 20.04
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true

  - template: install-dependencies.yml

  - template: cargo.yml
    parameters:
      test_target: x86_64-unknown-linux-gnu
      RunTests: ${{ parameters.RunTests }}
      checks: true

  - pwsh: cargo install cross --git https://github.com/cross-rs/cross --rev c87a52a60dbcde069714a8d2ed51570e7fc23cf9
    displayName: ‚öôÔ∏è install cross

  - pwsh: cross build -r --target=aarch64-unknown-linux-gnu
    displayName: üõ†Ô∏è build linux-arm64
    workingDirectory: src/nerdbank-zcash-rust

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}
      osRID: linux
      publishPlatforms: ${{ parameters.publishPlatforms }}

  - template: velopack.yml
    parameters:
      osRID: linux
      BaseChannelName: ${{ parameters.BaseChannelName }}
      publishPlatforms: ${{ parameters.publishPlatforms }}

  - script: dotnet format --verify-no-changes --no-restore
    displayName: üíÖ Verify formatted code
    enabled: false # TODO: enable this once we've solved the issue with uniffi C# emitted code formatting

- job: android
  displayName: android
  pool:
    vmImage: Ubuntu 20.04
  steps:
  - checkout: self
    fetchDepth: 1
    clean: true
    submodules: true

  - template: android.yml

- job: macOS
  pool:
    vmImage: macOS-12
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true

  - template: install-dependencies.yml

  - template: cargo.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}
      test_target: x86_64-apple-darwin

  - template: dotnet.yml
    parameters:
      RunTests: ${{ parameters.RunTests }}
      osRID: osx
      publishPlatforms: ${{ parameters.publishPlatforms }}

- job: macOS_velopack
  displayName: macOS velopack
  dependsOn: macOS
  pool:
    vmImage: macOS-12
  steps:
  - template: velopack.yml
    parameters:
      osRID: osx
      BaseChannelName: ${{ parameters.BaseChannelName }}
      publishPlatforms: ${{ parameters.publishPlatforms }}
      BuildJobName: macOS

- job: Pack
  displayName: dotnet pack
  dependsOn:
  - Windows
  - Linux
  - macOS
  - android
  pool:
    vmImage: Ubuntu 20.04
  steps:
  - checkout: self
    fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
    clean: true
    submodules: true
  - template: install-dependencies.yml
  - template: pack.yml

- ${{ if ne(parameters.BaseChannelName, '') }}:
  - job: Publish
    dependsOn: ${{ parameters.desktopAppAgents }}
    variables:
    - group: eZcash App Updates storage
    pool:
      vmImage: Ubuntu 20.04
    steps:
    - checkout: self
      fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
      clean: true
    - template: install-dependencies.yml
    - template: publish.yml
      parameters:
        agents: ${{ parameters.desktopAppAgents }}

- job: WrapUp
  dependsOn:
  - Windows
  - Linux
  - macOS
  pool: ${{ parameters.windowsPool }} # Use Windows agent because PublishSymbols task requires it (https://github.com/microsoft/azure-pipelines-tasks/issues/13821).
  steps:
  - checkout: self
    fetchDepth: 1
    clean: true
    submodules: false
  - template: install-dependencies.yml
    parameters:
      initArgs: -NoRestore
  - template: publish-symbols.yml
  - ${{ if parameters.RunTests }}:
    - template: publish-codecoverage.yml
