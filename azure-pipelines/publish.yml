parameters:
- name: KeepMaxReleases
  type: number
  default: 10
- name: agents
  type: object

steps:
- ${{ each agent in parameters.agents }}:
  - download: current
    artifact: apps-${{ agent }}
    displayName: ðŸ”» Download ${{ agent }} apps

  - pwsh: |
      $path = Resolve-Path '$(Pipeline.Workspace)/apps-${{ agent }}'
      $VelopackData = Get-Content -Path '$(Pipeline.Workspace)/apps-${{ agent }}/velopack-data.json' | ConvertFrom-Json
      Get-ChildItem $path\assets.*.json |% {
        $_.Name -match '^assets\.(.+)\.json$' | Out-Null
        $Channel = $Matches[1]
        Write-Host "##[section]Uploading $Channel channel velopack to Azure Blob Storage..."

        # Patch up the absolute paths in the assets.*.json file which were created on the build agents.
        # https://github.com/velopack/velopack/issues/82
        $assetsFile = Get-Content $_ | ConvertFrom-Json
        for ($i = 0; $i -lt $assetsFile.Files.Count; $i++) {
          $assetsFile.Files[$i] = Join-Path $path (Split-Path $assetsFile.Files[$i] -Leaf)
        }
        $assetsFile | ConvertTo-Json | Set-Content $_

        $vpkCommand = @(
          'vpk','upload','az',
          '--keepMaxReleases', '${{ parameters.KeepMaxReleases }}',
          '--account', $VelopackData.storageAccount,
          '--container', $VelopackData.container,
          '--outputDir', $path,
          '--channel', $Channel,
          '--sas', '$(AutoUpdateStorageSASToken)'
        )
        Write-Host "##[command]dotnet $vpkCommand"
        dotnet @vpkCommand
      }
    displayName: ðŸ“¦ Publish ${{ agent }} app packages
    condition: and(succeeded(), ne(variables['AutoUpdateStorageSASToken'], ''))
