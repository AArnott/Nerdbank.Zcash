<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountIndexOptionDescription" xml:space="preserve">
    <value>O índice da conta a ser criada.</value>
  </data>
  <data name="AccountsCommandDescription" xml:space="preserve">
    <value>Listar todas as contas conhecidas do banco de dados.</value>
  </data>
  <data name="BadSeedPhraseLength" xml:space="preserve">
    <value>O comprimento da frase-semente deve ser pelo menos 24 e múltiplo de 3.</value>
  </data>
  <data name="BalanceCommandDescription" xml:space="preserve">
    <value>Relatórios de saldos para cada pool.</value>
  </data>
  <data name="BirthdayHeightOptionDescription" xml:space="preserve">
    <value>Força uma altura de aniversário específica a ser registrada na nova conta. Por padrão, isso será o comprimento atual do blockchain se estiver no modo online.</value>
  </data>
  <data name="ContinuallyOptionDescription" xml:space="preserve">
    <value>Baixar o blockchain continuamente, observando novos blocos à medida que são adicionados.</value>
  </data>
  <data name="HistoryCommandDescription" xml:space="preserve">
    <value>Listar transações do blockchain pertencentes a esta carteira.</value>
  </data>
  <data name="HistoryStartingBlockOptionDescription" xml:space="preserve">
    <value>O primeiro bloco cujas transações devem ser incluídas na lista de transações.</value>
  </data>
  <data name="ImportAccountCommandDescription" xml:space="preserve">
    <value>Cria uma nova conta com base em uma chave de visualização.</value>
  </data>
  <data name="InvalidAddress" xml:space="preserve">
    <value>Erro ao analisar o endereço: "{address}". {error}</value>
  </data>
  <data name="InvalidSeedPhrase" xml:space="preserve">
    <value>Frase-semente inválida.</value>
  </data>
  <data name="KeyArgumentDescription" xml:space="preserve">
    <value>A chave de visualização para basear a nova conta.</value>
  </data>
  <data name="LightServerUrlOptionDescription" xml:space="preserve">
    <value>A URL do servidor lightwallet para consultar o comprimento do blockchain para fins de impressão de uma altura de aniversário. O padrão varia de acordo com a geração para mainnet ou testnet.</value>
  </data>
  <data name="NewAccountCommandDescription" xml:space="preserve">
    <value>Cria uma nova conta Zcash.</value>
  </data>
  <data name="NewAccountWalletPathOptionDescription" xml:space="preserve">
    <value>O caminho para o arquivo da carteira a ser criado.</value>
  </data>
  <data name="NoSyncOption" xml:space="preserve">
    <value>Não baixar os últimos blocos no blockchain primeiro. Isso acelerará o comando, mas poderá fazer com que ele falhe ou relate dados desatualizados.</value>
  </data>
  <data name="NotAUnifiedAddress" xml:space="preserve">
    <value>Este não é um endereço unificado.</value>
  </data>
  <data name="NoUnshieldedFunds" xml:space="preserve">
    <value>Não há fundos transparentes para proteger.</value>
  </data>
  <data name="OfflineOptionDescription" xml:space="preserve">
    <value>Suprime toda a comunicação de rede. Em particular, isso suprimirá a exibição da altura de aniversário para a nova conta.</value>
  </data>
  <data name="PasswordOptionDescription" xml:space="preserve">
    <value>Uma senha além da frase-semente que desbloqueia a conta. Embora qualquer frase seja aceita, algumas carteiras aceitam apenas uma palavra.</value>
  </data>
  <data name="RequestPaymentAmountOptionDescription" xml:space="preserve">
    <value>O valor a ser solicitado para um pagamento específico.</value>
  </data>
  <data name="RequestPaymentArgumentCountMismatch" xml:space="preserve">
    <value>O switch {switchName} deve ter o mesmo número de argumentos que o número de destinatários ({expected}), mas tinha {actual}.</value>
  </data>
  <data name="RequestPaymentCommandDescription" xml:space="preserve">
    <value>Criar um URI de solicitação de pagamento e opcionalmente um código QR.</value>
  </data>
  <data name="RequestPaymentLabelOptionDescription" xml:space="preserve">
    <value>Um rótulo legível por humanos que identifica o endereço de recebimento.</value>
  </data>
  <data name="RequestPaymentMemoOptionDescription" xml:space="preserve">
    <value>Uma observação associada a um pagamento específico.</value>
  </data>
  <data name="RequestPaymentMessageOptionDescription" xml:space="preserve">
    <value>Uma mensagem legível por humanos associada a um pagamento específico.</value>
  </data>
  <data name="RequestPaymentPayeeArgumentDescription" xml:space="preserve">
    <value>Os endereços Zcash para receber pagamentos.</value>
  </data>
  <data name="RequestPaymentSaveQRCodeOption" xml:space="preserve">
    <value>O caminho para a imagem a ser salva com o código QR.</value>
  </data>
  <data name="RootCommandDescription" xml:space="preserve">
    <value>Realiza operações Zcash.</value>
  </data>
  <data name="SeedLengthAndSeedPhraseNotAllowed" xml:space="preserve">
    <value>Não especifique tanto a frase-semente quanto um comprimento para uma frase-semente gerada.</value>
  </data>
  <data name="SeedPhraseLengthOptionDescription" xml:space="preserve">
    <value>O número de palavras na frase-semente gerada. Deve ser 24 ou mais e múltiplo de 3.</value>
  </data>
  <data name="SeedPhraseOptionDescription" xml:space="preserve">
    <value>Usar uma frase-semente específica. Especifique uma como argumento ou uma solicitação coletará interativamente.</value>
  </data>
  <data name="SeedPhrasePrompt" xml:space="preserve">
    <value>Digite a frase-semente:</value>
  </data>
  <data name="SelectedAccountArgumentDescription" xml:space="preserve">
    <value>Identifica a conta a ser operada, dado seu endereço padrão.</value>
  </data>
  <data name="SendAmountArgumentDescription" xml:space="preserve">
    <value>O valor a ser enviado (em ZEC).</value>
  </data>
  <data name="SendCommandDescription" xml:space="preserve">
    <value>Envia Zcash para um determinado endereço.</value>
  </data>
  <data name="SendFeeOptionDescription" xml:space="preserve">
    <value>Substitui o cálculo de taxa padrão por um valor específico (em ZEC).</value>
  </data>
  <data name="SendMemoOptionDescription" xml:space="preserve">
    <value>A observação a ser incluída na transação.</value>
  </data>
  <data name="SendRecipientArgumentDescription" xml:space="preserve">
    <value>O endereço para receber fundos.</value>
  </data>
  <data name="ShieldAllOptionDescription" xml:space="preserve">
    <value>Proteger fundos transparentes de todos os endereços transparentes, em vez de apenas um. Proteger todos os endereços transparentes de uma só vez pode permitir que outros correlacionem seus endereços transparentes por meio de informações públicas no blockchain. A privacidade é melhorada adicionando atrasos aleatórios entre a proteção de cada endereço transparente. Esses atrasos devem ser *pelo menos* suficientes para garantir que cada transação esteja em seu próprio bloco.</value>
  </data>
  <data name="ShieldCommandDescription" xml:space="preserve">
    <value>Protege fundos transparentes. Um código de saída 1 indica que ainda existem endereços transparentes com saldos diferentes de zero a serem protegidos.</value>
  </data>
  <data name="SpendingKeyAccountIndexOptionDescription" xml:space="preserve">
    <value>O índice da conta sob a frase-semente usada para gerar a chave de gastos.</value>
  </data>
  <data name="SpendingKeySeedOptionDescription" xml:space="preserve">
    <value>A frase-semente usada para gerar a chave de gastos.</value>
  </data>
  <data name="SyncCommandDescription" xml:space="preserve">
    <value>Baixa transações do blockchain.</value>
  </data>
  <data name="TestNetOptionDescription" xml:space="preserve">
    <value>Indica que a conta será usada em uma testnet em vez de mainnet.</value>
  </data>
  <data name="TexCommandDescription" xml:space="preserve">
    <value>Converte um endereço transparente em um endereço TEX.</value>
  </data>
  <data name="TexTransparentAddressArgumentDescription" xml:space="preserve">
    <value>O endereço transparente para converter.</value>
  </data>
  <data name="TransparentP2PKHAddressRequired" xml:space="preserve">
    <value>É necessário um endereço transparente P2PKH.</value>
  </data>
  <data name="UACommandDescription" xml:space="preserve">
    <value>Codifica ou decodifica endereços UA.</value>
  </data>
  <data name="UAConstructCommandDescription" xml:space="preserve">
    <value>Constrói um endereço unificado a partir de um conjunto de destinatários.</value>
  </data>
  <data name="UAConstructReceiversArgumentDescription" xml:space="preserve">
    <value>Destinatários a serem incluídos no endereço unificado.</value>
  </data>
  <data name="UAParseArgumentDescription" xml:space="preserve">
    <value>O endereço unificado a ser decodificado.</value>
  </data>
  <data name="UAParseCommandDescription" xml:space="preserve">
    <value>Decodifica um UA em seus endereços de destinatário componentes.</value>
  </data>
  <data name="UnrecognizedKeyFormat" xml:space="preserve">
    <value>Este formato de chave não é reconhecido.</value>
  </data>
  <data name="WalletPathArgumentDescription" xml:space="preserve">
    <value>O caminho para o arquivo da carteira.</value>
  </data>
</root>