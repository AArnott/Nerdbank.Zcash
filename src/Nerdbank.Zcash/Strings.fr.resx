<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotDeriveHardenedChildFromPublicKey" xml:space="preserve">
    <value>Un enfant durci ne peut pas être dérivé à partir d'une clé publique étendue. Utilisez plutôt une clé privée étendue.</value>
  </data>
  <data name="ErrorFromNativeSide" xml:space="preserve">
    <value>Une erreur non mappée s'est produite à travers la couche d'interopérabilité.</value>
  </data>
  <data name="ErrorInGetLightWalletServerInfo" xml:space="preserve">
    <value>Une erreur s'est produite lors de la récupération des métadonnées du serveur lightwallet.</value>
  </data>
  <data name="ExpectedKeyNotContainedWithinUnifiedViewingKey" xml:space="preserve">
    <value>La clé de visualisation unifiée ne contient pas le type de clé requis pour utiliser cette API.</value>
  </data>
  <data name="FullViewingKeyRequired" xml:space="preserve">
    <value>Une clé de visualisation complète est requise pour qu'un compte puisse simuler un envoi.</value>
  </data>
  <data name="InsufficientFunds" xml:space="preserve">
    <value>Il n'y a pas suffisamment de fonds pour la dépense demandée : {required} seraient nécessaires (y compris les frais) mais seulement {available} sont disponibles.</value>
  </data>
  <data name="InvalidAddress" xml:space="preserve">
    <value>Cette adresse est invalide ou non reconnue.</value>
  </data>
  <data name="InvalidAddressChecksum" xml:space="preserve">
    <value>Cette adresse a un checksum invalide.</value>
  </data>
  <data name="InvalidAddressLength" xml:space="preserve">
    <value>Cette adresse ne respecte pas les exigences de longueur.</value>
  </data>
  <data name="InvalidKey" xml:space="preserve">
    <value>Clé invalide.</value>
  </data>
  <data name="InvalidNetworkHeader" xml:space="preserve">
    <value>Cette adresse ne spécifie pas un réseau reconnu.</value>
  </data>
  <data name="InvalidPadding" xml:space="preserve">
    <value>Le checksum de cette adresse est manquant ou incorrect.</value>
  </data>
  <data name="InvalidSaplingPreamble" xml:space="preserve">
    <value>Une adresse Sapling doit commencer par 'zs1' ou 'ztestsapling1'.</value>
  </data>
  <data name="InvalidSproutPreamble" xml:space="preserve">
    <value>Une adresse Sprout doit commencer par 'zc' ou 'zt'.</value>
  </data>
  <data name="InvalidXAddress" xml:space="preserve">
    <value>Cette adresse {addressType} ne respecte pas les exigences attendues.</value>
  </data>
  <data name="LengthOutsideExpectedRange" xml:space="preserve">
    <value>La collection devait avoir une longueur comprise entre {minimum} et {maximum}, mais elle était de {actual}.</value>
  </data>
  <data name="LengthRangeNotMet" xml:space="preserve">
    <value>Cette valeur doit avoir une longueur de {minimum} à {maximum}.</value>
  </data>
  <data name="MemoDataTooLarge" xml:space="preserve">
    <value>Les données fournies sont trop volumineuses pour tenir dans le champ de mémo.</value>
  </data>
  <data name="MemoForTransparentReceiverNotSupported" xml:space="preserve">
    <value>Aucun mémo ne peut être fourni lorsque le destinataire est une adresse transparente.</value>
  </data>
  <data name="MixingNetworksInUANotAllowed" xml:space="preserve">
    <value>Tous les destinataires doivent provenir du même réseau Zcash.</value>
  </data>
  <data name="MustUnderstandMetadataNotAllowedThisRevision" xml:space="preserve">
    <value>Codage contenant des métadonnées non autorisées (code de type {typeCode}, révision {revision}).</value>
  </data>
  <data name="NetworkMismatch" xml:space="preserve">
    <value>Ce serveur est configuré pour une utilisation sur le réseau {expected}, mais le paramètre d'entrée est sur le réseau {actual}.</value>
  </data>
  <data name="OnlyHardenedChildKeysSupported" xml:space="preserve">
    <value>Seules les clés durcies sont prises en charge.</value>
  </data>
  <data name="OperationCanceled" xml:space="preserve">
    <value>L'opération a été annulée.</value>
  </data>
  <data name="UnknownErrorAcrossInteropBoundary" xml:space="preserve">
    <value>Une erreur s'est produite dans le moteur Zcash.</value>
  </data>
  <data name="UnrecognizedAccount" xml:space="preserve">
    <value>Ce compte n'a pas encore été ajouté au portefeuille.</value>
  </data>
  <data name="UnrecognizedAddress" xml:space="preserve">
    <value>Cette adresse ne correspond à aucun format connu.</value>
  </data>
  <data name="UnrecognizedMustUnderstandMetadata" xml:space="preserve">
    <value>Codage contenant des métadonnées non comprises (code de type : {typeCode}).</value>
  </data>
  <data name="UnrecognizedNetwork" xml:space="preserve">
    <value>Réseau non reconnu '{network}'.</value>
  </data>
  <data name="UnrecognizedScheme" xml:space="preserve">
    <value>Le schéma '{expected}' attendu n'a pas été trouvé, à la place '{actual}' a été trouvé.</value>
  </data>
  <data name="UnsupportedTransactionVersion" xml:space="preserve">
    <value>Version de transaction non prise en charge {version}.</value>
  </data>
</root>
