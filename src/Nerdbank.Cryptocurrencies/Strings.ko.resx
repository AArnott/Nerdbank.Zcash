<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bech32TagBufferTooSmall" xml:space="preserve">
    <value>태그 버퍼가 너무 작습니다.</value>
  </data>
  <data name="CallResetFirst" xml:space="preserve">
    <value>이 객체는 마지막으로 초기화된 이후로 다시 초기화되지 않았습니다. 먼저 "{methodName}"을(를) 호출하세요.</value>
  </data>
  <data name="DecodeInputTooShort" xml:space="preserve">
    <value>입력 길이가 이 인코딩에 필요한 최소 길이보다 짧습니다.</value>
  </data>
  <data name="ExchangeRatesRequireOneCommonSecurity" xml:space="preserve">
    <value>환율에 공통 보안이 없습니다.</value>
  </data>
  <data name="ExchangeRatesRequireUniqueSecurities" xml:space="preserve">
    <value>환율은 동일한 두 가지 보안을 설명합니다. 변환을 수행할 수 없습니다.</value>
  </data>
  <data name="HistoricalPriceNotAvailableForThisDate" xml:space="preserve">
    <value>해당 시간에 대한 이 거래 쌍의 과거 가격이 없습니다.</value>
  </data>
  <data name="HumanReadablePartRequired" xml:space="preserve">
    <value>빈 사람이 읽을 수 있는 부분은 허용되지 않습니다.</value>
  </data>
  <data name="InvalidBip32KeyPath" xml:space="preserve">
    <value>잘못된 BIP-32 키 파생 경로입니다.</value>
  </data>
  <data name="InvalidCharXFoundAtY" xml:space="preserve">
    <value>위치 {position}에서 '{character}' 문자가 허용되지 않습니다.</value>
  </data>
  <data name="InvalidChecksum" xml:space="preserve">
    <value>잘못된 체크섬입니다.</value>
  </data>
  <data name="InvalidOnKeyPathRoot" xml:space="preserve">
    <value>이 작업은 키 경로의 KeyPath.Root 노드에서 유효하지 않습니다.</value>
  </data>
  <data name="MissingBech32Separator" xml:space="preserve">
    <value>'1' 구분 기호 문자가 없습니다.</value>
  </data>
  <data name="MixedCaseBech32" xml:space="preserve">
    <value>인코딩은 모두 소문자 또는 모든 대문자이어야하지만 혼합 케이스가 포함되어 있어야합니다.</value>
  </data>
  <data name="SecurityMismatch" xml:space="preserve">
    <value>이 작업은 모든 입력이 동일한 보안 유형이어야 합니다.</value>
  </data>
  <data name="TargetBufferTooSmall" xml:space="preserve">
    <value>대상 버퍼가 디코딩된 페이로드를 보유하기에 충분히 크지 않습니다.</value>
  </data>
  <data name="TradingPairNotSupported" xml:space="preserve">
    <value>이 거래소는 이 거래 쌍을 지원하지 않습니다.</value>
  </data>
  <data name="TradingPairRequiresUniqueSecurities" xml:space="preserve">
    <value>기준 및 거래 이자는 서로 달라야 합니다.</value>
  </data>
</root>