<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bech32TagBufferTooSmall" xml:space="preserve">
    <value>标签缓冲区太小。</value>
  </data>
  <data name="CallResetFirst" xml:space="preserve">
    <value>此对象自上次完成以来尚未重新初始化。首先调用 "{methodName}"。</value>
  </data>
  <data name="DecodeInputTooShort" xml:space="preserve">
    <value>输入长度小于此编码所需的最小长度。</value>
  </data>
  <data name="ExchangeRatesRequireOneCommonSecurity" xml:space="preserve">
    <value>汇率没有共同的安全性。</value>
  </data>
  <data name="ExchangeRatesRequireUniqueSecurities" xml:space="preserve">
    <value>汇率描述了相同的两个证券。无法进行任何转换。</value>
  </data>
  <data name="HistoricalPriceNotAvailableForThisDate" xml:space="preserve">
    <value>给定时间的交易对的历史价格不可用。</value>
  </data>
  <data name="HumanReadablePartRequired" xml:space="preserve">
    <value>不允许为空的可读部分。</value>
  </data>
  <data name="InvalidBip32KeyPath" xml:space="preserve">
    <value>无效的 BIP-32 密钥派生路径。</value>
  </data>
  <data name="InvalidCharXFoundAtY" xml:space="preserve">
    <value>在位置 {position} 发现不允许的字符 '{character}'。</value>
  </data>
  <data name="InvalidChecksum" xml:space="preserve">
    <value>无效的校验和。</value>
  </data>
  <data name="InvalidOnKeyPathRoot" xml:space="preserve">
    <value>此操作对密钥路径的 KeyPath.Root 节点无效。</value>
  </data>
  <data name="MissingBech32Separator" xml:space="preserve">
    <value>未找到 '1' 分隔符字符。</value>
  </data>
  <data name="MixedCaseBech32" xml:space="preserve">
    <value>编码必须全部是小写或所有大写，但包含一个混合的情况。</value>
  </data>
  <data name="SecurityMismatch" xml:space="preserve">
    <value>此操作要求所有输入都是相同的安全类型。</value>
  </data>
  <data name="TargetBufferTooSmall" xml:space="preserve">
    <value>目标缓冲区不足以容纳解码的有效负载。</value>
  </data>
  <data name="TradingPairNotSupported" xml:space="preserve">
    <value>此交易所不提供此交易对。</value>
  </data>
  <data name="TradingPairRequiresUniqueSecurities" xml:space="preserve">
    <value>基础和交易利益必须不同。</value>
  </data>
</root>