<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CanReceiveColumnHeader" xml:space="preserve">
    <value>Pode receber</value>
  </data>
  <data name="CanSpendColumnHeader" xml:space="preserve">
    <value>Pode gastar</value>
  </data>
  <data name="CapabilitiesHeading" xml:space="preserve">
    <value>Capacidades</value>
  </data>
  <data name="InternalKeys_Description" xml:space="preserve">
    <value>Isso protege a integridade das Chaves de Visualização de Entrada (IVKs) para que elas não vejam nenhuma parte de qualquer transação de gasto. Depois que uma carteira com esse recurso gasta ou protege fundos, carteiras que não possuem esse recurso não verão o saldo total da conta.</value>
  </data>
  <data name="InternalKeys_Title" xml:space="preserve">
    <value>Chaves internas para proteção e troco</value>
  </data>
  <data name="MultiAccountSourcedTransactions_Description" xml:space="preserve">
    <value>Várias contas podem fornecer fundos para uma única transação. Isso foi apoiado pelo Zecwallet Lite como parte de uma apresentação inadequada de endereços ZCash e não é recomendado. As contas do ZCash envolvidas nessas transações podem não apresentar o histórico de transações corretamente em aplicativos de carteira (como este) que não suportam esse recurso.</value>
  </data>
  <data name="MultiAccountSourcedTransactions_Title" xml:space="preserve">
    <value>Transações de origem de contas múltiplas</value>
  </data>
  <data name="MultipleAccounts_Description" xml:space="preserve">
    <value>Use contas distintas para contas de gastos e poupança enquanto lembra ou faz backup de apenas uma frase de semente.</value>
  </data>
  <data name="MultipleAccounts_Title" xml:space="preserve">
    <value>Múltiplas contas por frase de semente</value>
  </data>
  <data name="Multispend_Description" xml:space="preserve">
    <value>Reduz as taxas de rede e os tempos de espera obrigatórios entre vários gastos.</value>
  </data>
  <data name="Multispend_Title" xml:space="preserve">
    <value>Gastos com vários destinatários</value>
  </data>
  <data name="PoolBalancing_Description" xml:space="preserve">
    <value>Isso melhora a privacidade ao reduzir a probabilidade de que o valor de uma transação (ou uma parte dela) seja publicamente observável.</value>
  </data>
  <data name="PoolBalancing_Title" xml:space="preserve">
    <value>Equilíbrio automático de pool protegido</value>
  </data>
  <data name="PoolsHeading" xml:space="preserve">
    <value>Pools suportados</value>
  </data>
  <data name="Zip32_Description" xml:space="preserve">
    <value>Uma "frase de semente" legível por humanos desbloqueia suas contas.</value>
  </data>
  <data name="Zip32_Title" xml:space="preserve">
    <value>Carteiras HD ZIP-32</value>
  </data>
</root>