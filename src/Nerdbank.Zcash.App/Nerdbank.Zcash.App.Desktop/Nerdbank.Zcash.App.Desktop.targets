<Project InitialTargets="SuppressRIDWarning">
  <PropertyGroup>
    <VelopackRuntimeRequired>net8.0</VelopackRuntimeRequired>
    <VelopackStorageAccount>ezcash</VelopackStorageAccount>
    <VelopackContainer>appupdates</VelopackContainer>
    <VelopackUpdateUrl>https://$(VelopackStorageAccount).blob.core.windows.net/$(VelopackContainer)</VelopackUpdateUrl>
  </PropertyGroup>

  <ItemGroup>
    <AdditionalThisAssemblyFields Include="VelopackUpdateUrl" String="$(VelopackUpdateUrl)" />
  </ItemGroup>

  <Target Name="SuppressRIDWarning">
    <!-- The Xamarin targets seem to think it's a bad thing to publish to a particular RID as specified at the CLI. No idea why.
         But it's important for us to do, because we need to build two RIDs for macOS. -->
    <PropertyGroup>
      <_RuntimeIdentifiersClashMessage />
    </PropertyGroup>
  </Target>

  <Target Name="WriteVelopackUpdateUrlFile"
          BeforeTargets="CoreCompile"
          Inputs="$(MSBuildProjectFile)"
          Outputs="$(IntermediateOutputPath)velopack-data.json"
          Condition="'$(TargetFramework)'!=''">
    <PropertyGroup>
      <VelopackExeName>$(TargetName)</VelopackExeName>
      <!-- VelopackExeName's extension should actually be based on RID -->
      <VelopackExeName Condition="'$(RuntimeIdentifier)'=='' or $(RuntimeIdentifier.StartsWith('win-'))">$(VelopackExeName).exe</VelopackExeName>
    </PropertyGroup>
    <ItemGroup>
      <VelopackLines Include="{" />
      <VelopackLines Include='"url": "$(VelopackUpdateUrl)",' />
      <VelopackLines Include='"runtime": "$(VelopackRuntimeRequired)",' />
      <VelopackLines Include='"storageAccount": "$(VelopackStorageAccount)",' />
      <VelopackLines Include='"container": "$(VelopackContainer)",' />
      <VelopackLines Include='"exeName": "$(VelopackExeName)"' />
      <VelopackLines Include="}" />
    </ItemGroup>
    <WriteLinesToFile File="$(IntermediateOutputPath)velopack-data.json" Lines="@(VelopackLines)" Overwrite="true" />
  </Target>
</Project>
