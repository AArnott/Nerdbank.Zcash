[Error]
enum LightWalletError {
	"InvalidUri",
	"InvalidHandle",
	"Other",
};

enum Network {
	"MainNet",
	"TestNet",
};

dictionary Config {
	string server_uri;
	Network network;
	string data_dir;
	string wallet_name;
	string log_name;
	boolean monitor_mempool;
};

dictionary SyncStatus {
	boolean in_progress;
	string? last_error;

	u64 sync_id;
	u64 start_block;
	u64 end_block;

	u64 blocks_done;
	u64 trial_dec_done;
	u64 txn_scan_done;

	u64 blocks_total;

	u64 batch_num;
	u64 batch_total;
};

namespace LightWallet {
	[Throws=LightWalletError]
	u64 lightwallet_get_block_height(string server_uri);

	[Throws=LightWalletError]
	u64 lightwallet_initialize(Config config);

	boolean lightwallet_deinitialize(u64 handle);

	[Throws=LightWalletError]
	string lightwallet_sync(u64 handle);

	[Throws=LightWalletError]
	void lightwallet_sync_interrupt(u64 handle);

	[Throws=LightWalletError]
	SyncStatus lightwallet_sync_status(u64 handle);

	[Throws=LightWalletError]
	u64 lightwallet_get_birthday_height(u64 handle);
};
